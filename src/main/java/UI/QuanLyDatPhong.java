/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import dao.DatPhongDAO;
import dao.KhachHangDAO;
import dao.PhongDAO;
import dao.ThanhToanDAO;
import entity.DatPhong;
import entity.KhachHang;
import entity.Phong;
import entity.ThanhToan;
import java.awt.Color;
import java.time.LocalDate;
import java.util.Calendar;
import java.util.Date;
import java.util.List;
import java.util.Random;
import javax.swing.DefaultComboBoxModel;
import javax.swing.table.DefaultTableModel;
import utils.Auth;
import utils.MsgBox;
import utils.XDate;

/**
 *
 * @author USUS
 */
public class QuanLyDatPhong extends javax.swing.JDialog {

    ThanhToanDAO ttdao = new ThanhToanDAO();

    /**
     * Creates new form QuanLyDatPhong2
     */
    public QuanLyDatPhong(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        init();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabss = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtMaDatPhong = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        btnXoa = new javax.swing.JButton();
        btnMoi = new javax.swing.JButton();
        btnCapNhat = new javax.swing.JButton();
        txtMaNV = new javax.swing.JTextField();
        txtTienCoc = new javax.swing.JTextField();
        txtMaPhong = new javax.swing.JTextField();
        cboKhachHang = new javax.swing.JComboBox<>();
        lblBatLoiMaDP = new javax.swing.JLabel();
        date_NgayDat = new com.toedter.calendar.JDateChooser();
        date_NgayTra = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblPhongDaDat = new javax.swing.JTable();
        btnNhanPhong = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPhongTrong = new javax.swing.JTable();
        jPanel8 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblPhongDangThue = new javax.swing.JTable();
        btntraphong = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tabss.setBackground(new java.awt.Color(255, 209, 179));

        jPanel3.setBackground(new java.awt.Color(128, 157, 255));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Mã đặt phòng");

        jLabel2.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Ngày trả ");

        txtMaDatPhong.setEditable(false);
        txtMaDatPhong.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtMaDatPhong.setForeground(new java.awt.Color(255, 0, 0));
        txtMaDatPhong.setCaretColor(new java.awt.Color(255, 0, 0));
        txtMaDatPhong.setDisabledTextColor(new java.awt.Color(255, 0, 0));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Ngày đặt");

        jLabel4.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Mã nhân viên");

        jLabel6.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Mã khách hàng");

        jLabel8.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("Mã phòng");

        jLabel9.setFont(new java.awt.Font("Times New Roman", 0, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setText("Tiền cọc");

        jPanel4.setBackground(new java.awt.Color(128, 157, 255));
        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        btnThem.setBackground(new java.awt.Color(255, 153, 102));
        btnThem.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnThem.setForeground(new java.awt.Color(255, 255, 255));
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/add.png"))); // NOI18N
        btnThem.setText("THÊM");
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });

        btnXoa.setBackground(new java.awt.Color(255, 153, 102));
        btnXoa.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnXoa.setForeground(new java.awt.Color(255, 255, 255));
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/delete.png"))); // NOI18N
        btnXoa.setText("XÓA");
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });

        btnMoi.setBackground(new java.awt.Color(255, 153, 102));
        btnMoi.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnMoi.setForeground(new java.awt.Color(255, 255, 255));
        btnMoi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/new.png"))); // NOI18N
        btnMoi.setText("MỚI");
        btnMoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMoiActionPerformed(evt);
            }
        });

        btnCapNhat.setBackground(new java.awt.Color(255, 153, 102));
        btnCapNhat.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnCapNhat.setForeground(new java.awt.Color(255, 255, 255));
        btnCapNhat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/update1.png"))); // NOI18N
        btnCapNhat.setText("CẬP NHẬT");
        btnCapNhat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCapNhatActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnThem, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnXoa, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnMoi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCapNhat, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnThem, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnXoa, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCapNhat, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnMoi, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtMaNV.setEditable(false);
        txtMaNV.setEnabled(false);

        txtTienCoc.setEditable(false);
        txtTienCoc.setEnabled(false);

        txtMaPhong.setEnabled(false);

        date_NgayDat.setBackground(new java.awt.Color(204, 204, 204));
        date_NgayDat.setDateFormatString("dd/MM/yyyy");

        date_NgayTra.setBackground(new java.awt.Color(204, 204, 204));
        date_NgayTra.setDateFormatString("dd/MM/yyyy");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(txtMaNV)
                            .addComponent(cboKhachHang, 0, 311, Short.MAX_VALUE)
                            .addComponent(date_NgayDat, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTienCoc)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(txtMaPhong)
                            .addComponent(date_NgayTra, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(185, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblBatLoiMaDP, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtMaDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(93, 93, 93))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(271, 271, 271)))))
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(23, 23, 23))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaDatPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblBatLoiMaDP, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(date_NgayDat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(date_NgayTra, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMaNV, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtMaPhong, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTienCoc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cboKhachHang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(141, 141, 141))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(116, 116, 116))
        );

        tabss.addTab("Đặt phòng ", new javax.swing.ImageIcon(getClass().getResource("/Icon/people.png")), jPanel3); // NOI18N

        jPanel2.setBackground(new java.awt.Color(128, 157, 255));

        jScrollPane1.setBackground(new java.awt.Color(128, 157, 255));

        tblPhongDaDat.setBackground(new java.awt.Color(128, 157, 255));
        tblPhongDaDat.setForeground(new java.awt.Color(255, 255, 255));
        tblPhongDaDat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "Mã  phòng đặt", "Ngày đặt", "Ngày trả", "Mã nhân viên", "Mã phòng", "Mã khách hàng", "Tiền cọc"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhongDaDat.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhongDaDatMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblPhongDaDat);

        btnNhanPhong.setBackground(new java.awt.Color(0, 204, 153));
        btnNhanPhong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/phong.png"))); // NOI18N
        btnNhanPhong.setText("NHẬN PHÒNG");
        btnNhanPhong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNhanPhongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 833, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 577, Short.MAX_VALUE)
                .addComponent(btnNhanPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(91, 91, 91))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnNhanPhong, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
        );

        tabss.addTab("Danh sách phòng đã đặt", new javax.swing.ImageIcon(getClass().getResource("/Icon/listDD.png")), jPanel2); // NOI18N

        jPanel5.setBackground(new java.awt.Color(128, 157, 255));

        tblPhongTrong.setBackground(new java.awt.Color(128, 157, 255));
        tblPhongTrong.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Mã phòng", "Tên phòng", "Loại phòng ", "Giá phòng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblPhongTrong.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPhongTrongMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblPhongTrong);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(100, Short.MAX_VALUE))
        );

        tabss.addTab("Danh sách phòng trống", new javax.swing.ImageIcon(getClass().getResource("/Icon/listPT.png")), jPanel5); // NOI18N

        jPanel8.setBackground(new java.awt.Color(128, 157, 255));

        tblPhongDangThue.setBackground(new java.awt.Color(128, 157, 255));
        tblPhongDangThue.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Mã đặt phòng", "Ngày đặt", "Ngày trả", "Mã nhân viên", "Mã phòng", "Mã khách hàng"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(tblPhongDangThue);

        btntraphong.setBackground(new java.awt.Color(0, 204, 153));
        btntraphong.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/phong.png"))); // NOI18N
        btntraphong.setText("TRẢ PHÒNG");
        btntraphong.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btntraphongActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 823, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btntraphong, javax.swing.GroupLayout.PREFERRED_SIZE, 175, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(93, 93, 93))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 280, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btntraphong, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        tabss.addTab("Danh sách phòng đang thuê", new javax.swing.ImageIcon(getClass().getResource("/Icon/listDT.png")), jPanel8); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tabss))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabss, javax.swing.GroupLayout.PREFERRED_SIZE, 478, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCapNhatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCapNhatActionPerformed
       if(checkValidate()){
           this.update();
       }
               
        
    }//GEN-LAST:event_btnCapNhatActionPerformed

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        if(checkValidate()){
             this.insert();
                tabss.setSelectedIndex(1);
                fillTablePhongDatTruoc(0);
                fillTablePhongTrong(0);
            
        }
        
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        this.delete();
    }//GEN-LAST:event_btnXoaActionPerformed

    private void btnMoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMoiActionPerformed
        this.clearForm();
    }//GEN-LAST:event_btnMoiActionPerformed

    private void tblPhongDaDatMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhongDaDatMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblPhongDaDat.getSelectedRow();
            this.editPhongDaDat();
        }
    }//GEN-LAST:event_tblPhongDaDatMouseClicked

    private void tblPhongTrongMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPhongTrongMouseClicked
        if (evt.getClickCount() == 2) {
            this.row = tblPhongTrong.getSelectedRow();
            this.editPhongTrong();
        }
    }//GEN-LAST:event_tblPhongTrongMouseClicked

    private void btnNhanPhongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNhanPhongActionPerformed
     int[] rows = tblPhongDaDat.getSelectedRows();
     if (rows.length > 0){
         this.nhanPhong();
     }else{
         MsgBox.alert(this, "Bạn chưa chọn phòng nào");
     }
        
    }//GEN-LAST:event_btnNhanPhongActionPerformed

    private void btntraphongActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btntraphongActionPerformed
        int[] rows = tblPhongDangThue.getSelectedRows();
     if (rows.length > 0){
         this.TraPhong();
     }else{
         MsgBox.alert(this, "Bạn chưa chọn phòng nào");
     }
    }//GEN-LAST:event_btntraphongActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuanLyDatPhong.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuanLyDatPhong dialog = new QuanLyDatPhong(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCapNhat;
    private javax.swing.JButton btnMoi;
    private javax.swing.JButton btnNhanPhong;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JButton btntraphong;
    private javax.swing.JComboBox<String> cboKhachHang;
    private com.toedter.calendar.JDateChooser date_NgayDat;
    private com.toedter.calendar.JDateChooser date_NgayTra;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel lblBatLoiMaDP;
    private javax.swing.JTabbedPane tabss;
    private javax.swing.JTable tblPhongDaDat;
    private javax.swing.JTable tblPhongDangThue;
    private javax.swing.JTable tblPhongTrong;
    private javax.swing.JTextField txtMaDatPhong;
    private javax.swing.JTextField txtMaNV;
    private javax.swing.JTextField txtMaPhong;
    private javax.swing.JTextField txtTienCoc;
    // End of variables declaration//GEN-END:variables
    DatPhongDAO dpdao = new DatPhongDAO();
    PhongDAO pdao = new PhongDAO();
    KhachHangDAO khdao = new KhachHangDAO();
    int row;

    public void init() {
        this.setLocationRelativeTo(null);
        txtMaNV.setText(Auth.user.getMaNV());
        this.fillComboBoxKH();
        this.fillTablePhongTrong(0);
        this.row = -1;
        this.updateStatus();
    }
    
    private boolean checkValidate(){
        if(date_NgayDat.getDate()==null || date_NgayTra.getDate()==null){
            MsgBox.alert(this,"Ngày đặt và ngày trả không được trống");
            return false;
        }else{
            Date ngaydat = date_NgayDat.getDate();
            Date ngaytra = date_NgayTra.getDate();
            Calendar day1 = Calendar.getInstance();
            Calendar day2 = Calendar.getInstance();

            day1.setTime(ngaydat);
            day2.setTime(ngaytra);

            int ngayo = (int) ((day2.getTime().getTime() - day1.getTime().getTime()) / (24 * 3600 * 1000));
            int yearNgayDat = day1.get(Calendar.YEAR);
            LocalDate localDate = LocalDate.now();
            int yearHienTai = localDate.getYear();
            if(ngayo<=0){
                MsgBox.alert(this,"Số ngày trả phải nhỏ hơn ngày đặt");
                return false;
            }
            else if(yearNgayDat<yearHienTai){
                MsgBox.alert(this,"Số năm phải nhỏ hơn năm hiện tại");
                return false;
            }
        }
        
        return true;
    }
    private boolean CheckTrungMa(){
        if (dpdao.selectID(txtMaDatPhong.getText()) != null) {
            lblBatLoiMaDP.setText("Mã đặt phòng đã tồn tại");
            lblBatLoiMaDP.setForeground(Color.red);
            lblBatLoiMaDP.requestFocus();
            return false;
        }else{
            lblBatLoiMaDP.setText("");
        }
        return true;
    }
    private void fillTablePhongThue(int find) {
        DefaultTableModel model = (DefaultTableModel) tblPhongDangThue.getModel();
        model.setRowCount(0);
        //FIND  = 0 LẤY HẾT 
        if (find == 0) {
            List<DatPhong> list = dpdao.selectByPhongDangThue("Phòng đang thuê");//
            for (DatPhong dp : list) {
                Object[] row = {dp.getMadatPhong(), dp.getNgayDat(), dp.getNgayTra(), dp.getMaNV(), dp.getMaPhong(), dp.getMaKH()};
                model.addRow(row);
            }
        }
//        //FIND  = 1 LẤY THEO  MÃ PHÒNG TRÊN THANH TÌM KIẾM
//        if (find == 1) {
//            String maPhong = txtTimKiemPhongThue.getText();
//            List<DatPhong> list = dpdao.selectByKeyWordPhongThue(maPhong);
//            for (DatPhong dp : list) {
//                Object[] row = {dp.getMadatPhong(), dp.getNgayDat(), dp.getNgayTra(), dp.getMaNV(), dp.getMaPhong(), dp.getMaKH()};
//                model.addRow(row);
//            }
//        }
    }

    private void fillTablePhongDatTruoc(int find) {
        DefaultTableModel model = (DefaultTableModel) tblPhongDaDat.getModel();
        model.setRowCount(0);
        try {
            if (find == 0) {
                List<DatPhong> list = dpdao.selectByPhongDatTruoc("Phòng đã đặt trước");
                for (DatPhong dp : list) {
                    Object[] row = {dp.getMadatPhong(), dp.getNgayDat(), dp.getNgayTra(), dp.getMaNV(), dp.getMaPhong(), dp.getMaKH(), dp.getTienCoc()};
                    model.addRow(row);
                }
            }
//            if (find == 1) {
//                String maPhong = txtTimKiemPhongDat.getText();
//                List<DatPhong> list = dpdao.selectByKeyWord(maPhong);
//                for (DatPhong dp : list) {
//                    Object[] row = {dp.getMadatPhong(), dp.getNgayDat(), dp.getNgayTra(), dp.getMaNV(), dp.getMaPhong(), dp.getMaKH(), dp.getTienCoc()};
//                    model.addRow(row);
//                }
//            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            e.printStackTrace();
        }
        fillTablePhongThue(0);
    }

    private void fillTablePhongTrong(int find) {
        DefaultTableModel model = (DefaultTableModel) tblPhongTrong.getModel();
        model.setRowCount(0);
        try {
            if (find == 0) {
                List<Phong> list = pdao.selectByPhongTrong("Phòng trống");
                for (Phong p : list) {
                    Object[] row = {p.getMaPhong(), p.getTenPhong(), p.getLoaiPhong(), p.getGiaPhong()};
                    model.addRow(row);
                }
            }
//            if (find == 1) {
//                String maPhong = txtTimKiemPhongTrong.getText();
//                List<Phong> list = (List<Phong>) pdao.selectByPhongTrongTimkiem(maPhong);
//                for (Phong p : list) {
//                    Object[] row = {p.getMaPhong(), p.getTenPhong(), p.getLoaiPhong(), p.getGiaPhong()};
//                    model.addRow(row);
//                }
//            }
        } catch (Exception e) {
            MsgBox.alert(this, "Lỗi truy vấn dữ liệu");
            throw new RuntimeException(e);
        }
        fillTablePhongDatTruoc(0);
    }

    private void fillComboBoxKH() {
        DefaultComboBoxModel model = (DefaultComboBoxModel) cboKhachHang.getModel();
        model.removeAllElements();
        List<KhachHang> list = khdao.selectAll();
        for (KhachHang kh : list) {
            model.addElement(kh);
        }
    }

    private void nhanPhong() {
        for (int row : tblPhongDaDat.getSelectedRows()) {
            String maPhong = (String) tblPhongDaDat.getValueAt(row, 4);
           dpdao.updateTT(maPhong, 0);
        }
        fillTablePhongDatTruoc(0);
        fillTablePhongThue(0);
    }

    private void TraPhong() {
        this.row=tblPhongDangThue.getSelectedRow();
        String maDP = (String) tblPhongDangThue.getValueAt(this.row, 0);
        Date ngaydat = (Date) tblPhongDangThue.getValueAt(this.row, 1);
        Date ngaytra = (Date) tblPhongDangThue.getValueAt(this.row, 2);
        String maPhong = (String) tblPhongDangThue.getValueAt(this.row, 4);
        String maKH = (String) tblPhongDangThue.getValueAt(this.row, 5);
        String loaiphong=(String)tblPhongTrong.getValueAt(row,2);
        ThanhToan tt = ttdao.selectID(maDP);
        if (tt == null) {
            MsgBox.alert(this, "Phòng này chưa được thanh toán");
            Calendar day1 = Calendar.getInstance();
            Calendar day2 = Calendar.getInstance();
            day1.setTime(ngaydat);
            day2.setTime(ngaytra);
            int ngayo = (int) ((day2.getTime().getTime() - day1.getTime().getTime()) / (24 * 3600 * 1000));
            QuanLyThanhToan thanhtoan = new QuanLyThanhToan(null, true, maKH, ngayo,loaiphong,ngaydat,ngaytra);
            thanhtoan.setVisible(true);
        } else {
            MsgBox.alert(this, "Phòng này đã được thanh toán");
           dpdao.updateTT(maPhong, 1);
            fillTablePhongThue(0);
            fillTablePhongTrong(0);
        }
    }

    private DatPhong getForm() {
        DatPhong dp = new DatPhong();
        dp.setMadatPhong(txtMaDatPhong.getText());
        dp.setMaKH(cboKhachHang.getSelectedItem() + "");
        dp.setMaNV(Auth.user.getMaNV());
        dp.setMaPhong(txtMaPhong.getText());
        dp.setNgayDat(date_NgayDat.getDate());
        dp.setNgayTra(date_NgayTra.getDate());
        dp.setTienCoc(Float.valueOf(txtTienCoc.getText()));
        return dp;
    }

    private void setForm(DatPhong dp) {
        txtMaDatPhong.setText(dp.getMadatPhong());
        cboKhachHang.setSelectedItem(dp.getMaKH());
        txtMaNV.setText(dp.getMaNV());
        txtMaPhong.setText(dp.getMaPhong());
        date_NgayDat.setDate(dp.getNgayDat());
        date_NgayTra.setDate(dp.getNgayTra());
        txtTienCoc.setText(String.valueOf(dp.getTienCoc()));
    }

    private void insert() {

        DatPhong dp = getForm();
        try {
            dpdao.insert(txtMaDatPhong.getText(), XDate.toString(date_NgayDat.getDate()), XDate.toString(date_NgayTra.getDate()),
                    txtMaNV.getText(), txtMaPhong.getText(), cboKhachHang.getSelectedItem() + "", Float.valueOf(txtTienCoc.getText()));
            this.clearForm();
            MsgBox.alert(this, "Thêm mới thành công");
            lblBatLoiMaDP.setText("");
        } catch (Exception e) {
            lblBatLoiMaDP.setText("Mã đặt phòng đã tồn tại");
            //MsgBox.alert(this, "Thêm mới thất bại");
            //e.printStackTrace();
        }
    }

    private void update() {
        DatPhong dp = getForm();
        try {
            dpdao.update(XDate.toString(date_NgayDat.getDate()),
                    XDate.toString(date_NgayTra.getDate()),
                    Float.valueOf(txtTienCoc.getText()),
                    txtMaDatPhong.getText());
            this.fillTablePhongDatTruoc(0);
            MsgBox.alert(this, "Cập nhật thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Cập nhật thất bại");
            e.printStackTrace();
        }
    }

    private void delete() {
        String madp = txtMaDatPhong.getText();
        try {
            dpdao.delete(madp);
            this.fillTablePhongDatTruoc(0);
            this.fillTablePhongTrong(0);
            this.clearForm();
            MsgBox.alert(this, "Xóa thành công");
        } catch (Exception e) {
            MsgBox.alert(this, "Xóa thất bại");
            e.printStackTrace();
        }
    }

    private void clearForm() {
        DatPhong dp = new DatPhong();
        dp.setMaNV(Auth.user.getMaNV());
        lblBatLoiMaDP.setText("");
        this.setForm(dp);
        fillComboBoxKH();
        cboKhachHang.setEnabled(true);
        this.row = -1;
        this.updateStatus();
    }

    private void TimKiemPhongDat() {
        fillTablePhongDatTruoc(1);
        this.clearForm();
        this.row = -1;
    }

    private void TimKiemPhongTrong() {
        fillTablePhongTrong(1);
       this.clearForm();
        this.row = -1;
    }

    private void TimKiemPhongThue() {
        fillTablePhongThue(1);
        this.clearForm();
        this.row = -1;
    }

    private void editPhongTrong() {
        String maPhong = (String) tblPhongTrong.getValueAt(this.row, 0);
        float giaPhong = (Float) tblPhongTrong.getValueAt(this.row, 3);
        txtMaPhong.setText(maPhong);
        Random rd = new Random();
        String madp = "DP" + (1 + rd.nextInt(99));
        txtMaDatPhong.setText(madp);
        txtMaDatPhong.setEnabled(false);
        txtTienCoc.setText(String.valueOf(giaPhong*0.2));
        tabss.setSelectedIndex(0);
        this.updateStatusByPhongTrong();

    }

    private void updateStatusByPhongTrong() {
        boolean edit = (this.row >= 0);
        //Trạng thái form
        txtMaNV.setEditable(!edit);
        btnThem.setEnabled(edit);
        btnMoi.setEnabled(edit);
        // = FALSE KHÔNG ĐƯỢC CẬP NHẬT
        btnCapNhat.setEnabled(!edit);
        // = FALSE KHÔNG ĐƯỢC XÓA
        btnXoa.setEnabled(!edit);
    }

    private void editPhongDaDat() {
        String madp = (String) tblPhongDaDat.getValueAt(this.row, 0);
        DatPhong dp = dpdao.selectID(madp);
        this.setForm(dp);
        tabss.setSelectedIndex(0);
        this.updateStatusByPhongDaDat();

    }

    private void updateStatusByPhongDaDat() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblPhongDaDat.getRowCount() - 1);
        //Trạng thái form
        txtMaDatPhong.setEnabled(!edit);
        txtMaNV.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnCapNhat.setEnabled(edit);
        btnXoa.setEnabled(edit);
        btnMoi.setEnabled(!edit);
        cboKhachHang.setEnabled(!edit);

    }

    private void updateStatus() {
        boolean edit = (this.row >= 0);
        boolean first = (this.row == 0);
        boolean last = (this.row == tblPhongDaDat.getRowCount() - 1);
        //Trạng thái form
        txtMaNV.setEditable(!edit);
        btnThem.setEnabled(!edit);
        btnCapNhat.setEnabled(edit);
        btnXoa.setEnabled(edit);
    }

    public void chosetab(int index) {
        tabss.setSelectedIndex(3);
    }
}
