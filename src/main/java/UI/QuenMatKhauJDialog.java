/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI;

import dao.NhanVienDAO;
import dao.TaiKhoanDAO;
import entity.TaiKhoan;
import java.awt.Color;
import java.util.ArrayList;
import java.util.List;
import java.util.Properties;
import java.util.Random;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JPasswordField;
import org.apache.commons.lang.RandomStringUtils;
import utils.Auth;
import utils.MsgBox;

/**
 *
 * @author Admin
 */
public class QuenMatKhauJDialog extends javax.swing.JDialog {

    TaiKhoanDAO tkdao = new TaiKhoanDAO();
    /**
     * Creates new form QuenMatKhauJDialog
     */
    String maxacnhan;

    public QuenMatKhauJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        support();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        btnSendid = new javax.swing.JButton();
        lblEmail = new javax.swing.JLabel();
        txtTenDN = new javax.swing.JTextField();
        lblMa = new javax.swing.JLabel();
        txtmaXacNhan = new javax.swing.JTextField();
        lblMaVuaNhan = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnDoiMatKhau = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtMKmoi = new javax.swing.JPasswordField();
        btncheckma = new javax.swing.JButton();
        txtemailXachNhan1 = new javax.swing.JTextField();
        lblEmail1 = new javax.swing.JLabel();
        txtTimKiem = new javax.swing.JButton();
        rdoString = new javax.swing.JRadioButton();
        rdoNumber = new javax.swing.JRadioButton();

        jButton1.setText("jButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(128, 157, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnSendid.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btnSendid.setText("SEND ID");
        btnSendid.setToolTipText("");
        btnSendid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSendidActionPerformed(evt);
            }
        });
        jPanel1.add(btnSendid, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 110, 90, 30));

        lblEmail.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblEmail.setForeground(new java.awt.Color(255, 0, 0));
        lblEmail.setText("Tên đăng nhập");
        jPanel1.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));
        jPanel1.add(txtTenDN, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 20, 190, 30));

        lblMa.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMa.setForeground(new java.awt.Color(255, 0, 0));
        lblMa.setText("Nhấp vào đây để nhận mã xác nhận:");
        jPanel1.add(lblMa, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 230, 30));

        txtmaXacNhan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtmaXacNhanKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtmaXacNhanKeyReleased(evt);
            }
        });
        jPanel1.add(txtmaXacNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 200, 30));

        lblMaVuaNhan.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblMaVuaNhan.setForeground(new java.awt.Color(255, 0, 0));
        lblMaVuaNhan.setText("Nhập mã vừa nhận được:");
        jPanel1.add(lblMaVuaNhan, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 160, 180, 30));

        jLabel5.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 0, 0));
        jLabel5.setText("VD: 79921 , neTE6K ,........");
        jPanel1.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 220, 200, 30));

        btnDoiMatKhau.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        btnDoiMatKhau.setText("ĐỔI MẬT KHẨU");
        btnDoiMatKhau.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDoiMatKhauActionPerformed(evt);
            }
        });
        jPanel1.add(btnDoiMatKhau, new org.netbeans.lib.awtextra.AbsoluteConstraints(255, 290, 180, -1));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setText("Mật khẩu mới:");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 260, 100, -1));

        txtMKmoi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMKmoiActionPerformed(evt);
            }
        });
        jPanel1.add(txtMKmoi, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 290, 200, 30));

        btncheckma.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        btncheckma.setText("CHECK");
        btncheckma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btncheckmaActionPerformed(evt);
            }
        });
        jPanel1.add(btncheckma, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 190, -1, 30));
        jPanel1.add(txtemailXachNhan1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 80, 190, 30));

        lblEmail1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        lblEmail1.setForeground(new java.awt.Color(255, 0, 0));
        lblEmail1.setText("Nhập Email để xác nhận tại đây:");
        jPanel1.add(lblEmail1, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 60, -1, -1));

        txtTimKiem.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        txtTimKiem.setText("TÌM KIẾM");
        txtTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimKiemActionPerformed(evt);
            }
        });
        jPanel1.add(txtTimKiem, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 20, -1, -1));

        buttonGroup1.add(rdoString);
        rdoString.setText("STRING");
        jPanel1.add(rdoString, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 150, 80, -1));

        buttonGroup1.add(rdoNumber);
        rdoNumber.setText("NUMBER");
        jPanel1.add(rdoNumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(270, 150, 80, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 338, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDoiMatKhauActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDoiMatKhauActionPerformed
        if (checkMK()) {
            Auth.user.setMatKhau(new String(txtMKmoi.getPassword()));
            tkdao.update(Auth.user);
            MsgBox.alert(this, "Đổi mật khẩu thành công");
        }

    }//GEN-LAST:event_btnDoiMatKhauActionPerformed

    private void btnSendidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSendidActionPerformed
        if (checkguima()) {
            this.guima("gfthotel12@gmail.com", "hotel@sys123");
        }


    }//GEN-LAST:event_btnSendidActionPerformed

    private void txtmaXacNhanKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmaXacNhanKeyReleased

    }//GEN-LAST:event_txtmaXacNhanKeyReleased

    private void txtMKmoiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMKmoiActionPerformed

    }//GEN-LAST:event_txtMKmoiActionPerformed

    private void txtmaXacNhanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmaXacNhanKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtmaXacNhanKeyPressed

    private void btncheckmaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btncheckmaActionPerformed
        checkma();
    }//GEN-LAST:event_btncheckmaActionPerformed

    private void txtTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimKiemActionPerformed
        checkTK();
    }//GEN-LAST:event_txtTimKiemActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(QuenMatKhauJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                QuenMatKhauJDialog dialog = new QuenMatKhauJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDoiMatKhau;
    private javax.swing.JButton btnSendid;
    private javax.swing.JButton btncheckma;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEmail1;
    private javax.swing.JLabel lblMa;
    private javax.swing.JLabel lblMaVuaNhan;
    private javax.swing.JRadioButton rdoNumber;
    private javax.swing.JRadioButton rdoString;
    private javax.swing.JPasswordField txtMKmoi;
    private javax.swing.JTextField txtTenDN;
    private javax.swing.JButton txtTimKiem;
    private javax.swing.JTextField txtemailXachNhan1;
    private javax.swing.JTextField txtmaXacNhan;
    // End of variables declaration//GEN-END:variables

    private void support() {
        setLocationRelativeTo(null);
        txtemailXachNhan1.setEnabled(false);
        txtmaXacNhan.setEnabled(false);
        txtMKmoi.setEnabled(false);
        btnDoiMatKhau.setEnabled(false);
        btnSendid.setEnabled(false);
        btncheckma.setEnabled(false);
        rdoString.setEnabled(false);
        rdoNumber.setEnabled(false);
    }

    void guima(String account, String password) {
        if (rdoNumber.isSelected()) {
            Random rdn = new Random();
            maxacnhan = String.valueOf(rdn.nextInt(99999));

        }
        if (rdoString.isSelected()) {
            RandomStringUtils rds = new RandomStringUtils();
            maxacnhan = rds.randomAlphanumeric(5);
        }
        try {
            //Bước 1: Tạo đối tượng Properties và chỉ định thông tin host, port
            Properties p = new Properties();
            p.put("mail.smtp.auth", "true");
            p.put("mail.smtp.starttls.enable", "true");
            p.put("mail.smtp.host", "smtp.gmail.com");
            p.put("mail.smtp.port", 587);
            //Bước 2:Tạo đối tượng session để truyền username và pass
            //MÌNH SẼ LẤY MỘT TÀI KHOẢN  VÀ PASS MẶC ĐỊNH CHUNG CỦA CÔNG TY Ở MÁY CHỦ
            String acountName = account;
            String acountpass = password;
            Session s = Session.getInstance(p,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(acountName, acountpass);
                }
            });
            s.getProperties().put("mail.smtp.ssl.trust", "smtp.gmail.com");
            s.getProperties().put("mail.smtp.starttls.enable", "true");
            ///3.Tạo ra đối tượng message để truyền thông tin mail vào
            String user_from = "GFT-Hotel";
            String user_to = txtemailXachNhan1.getText();
            String subject = "Quen mat khau !!!! ";
            String content = "Ma xac nhan dat lai mat khau cua ban la: " + maxacnhan;
            Message msg = new MimeMessage(s);
            msg.setFrom(new InternetAddress(user_from));
            msg.setRecipients(Message.RecipientType.TO, InternetAddress.parse(user_to));
            msg.setSubject(subject);
            msg.setText(content);
            ///4.Tiến hành gửi mail lên google mail
            Transport.send(msg);
            MsgBox.alert(this, "Mã xác nhận đã được gửi đến email của bạn");
            txtmaXacNhan.setEnabled(true);
            btncheckma.setEnabled(true);
        } catch (Exception e) {
            MsgBox.alert(this, "Gửi thất bại! Không tìm thấy Email của bạn!");
            e.printStackTrace();
        }

    }

    void checkma() {
        if (!txtmaXacNhan.getText().equalsIgnoreCase(String.valueOf(maxacnhan))) {
            MsgBox.alert(this, "Mã xác nhận không đúng");
            txtmaXacNhan.setBackground(Color.red);
            return;
        } else if (txtmaXacNhan.getText().trim().length() == 0) {
            MsgBox.alert(this, "Không được để trống mã xác nhận");
        } else {
            txtmaXacNhan.setBackground(Color.white);
            MsgBox.alert(this, "Mã xác nhận đúng");
            txtMKmoi.setEnabled(true);
            btnDoiMatKhau.setEnabled(true);
        }

    }

    private boolean checkMK() {
        if (txtMKmoi.getPassword().equals("")) {
            MsgBox.alert(this, "Không để trống mật khẩu");
            return false;
        }
        return true;
    }

    private void checkTK() {
        String tenDN = txtTenDN.getText();
        if (tenDN.trim().length() == 0) {
            MsgBox.alert(this, "Không bỏ trống tên đăng nhập!");
        } else {
            TaiKhoan tk = tkdao.selectID(tenDN);
            if (tk == null) {
                MsgBox.alert(this, "Không tìm thấy tài khoản này!");
                txtTenDN.requestFocus();
            } else {
                Auth.user = tk;//Lưu nhân viên vào Auth
                MsgBox.alert(this, "Đã tìm thấy tài khoản!");
                txtemailXachNhan1.setEnabled(true);
                btnSendid.setEnabled(true);
                rdoString.setEnabled(true);
                rdoNumber.setEnabled(true);
            }
        }
    }

    boolean checkguima() {
        if (txtemailXachNhan1.getText().trim().length() == 0 && !rdoString.isSelected() && !rdoNumber.isSelected()) {
            MsgBox.alert(this, "Vui lòng nhập email muốn xác nhận và chọn kiểu gửi mã để gửi mã!");
            return false;
        }
        if (txtemailXachNhan1.getText().trim().length() > 0 && (!rdoString.isSelected() && !rdoNumber.isSelected())) {
            MsgBox.alert(this, "Vui lòng chọn kiểu gửi mã để gửi mã về email");
            return false;
        }
        if ((rdoString.isSelected() || rdoNumber.isSelected()) && txtemailXachNhan1.getText().trim().length() == 0) {
            MsgBox.alert(this, "Vui lòng nhập email muốn xác nhận để gửi mã");
            return false;
        }
        return true;
    }

}
